{"version":3,"sources":["сomponents/ContactForm/ContactForm.module.css","сomponents/Filter/Filter.module.css","сomponents/Container/Container.js","сomponents/ContactForm/ContactForm.js","сomponents/Filter/Filter.js","сomponents/ContactList/ContactList.js","App.js","index.js","сomponents/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","defaultProps","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","idContact","props","onSubmit","reset","this","className","styles","form","htmlFor","type","onChange","id","Component","Filter","filter","ContactList","contactList","onDeleteContact","map","contact","onClick","App","contacts","changeFilter","deleteContact","contactId","prevState","addContact","includes","alert","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedContacts","toLowerCase","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44aadd9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__25_cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3cykb\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Container = ({ children }) => {\r\n  return <div>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nContainer.defaultProps = {\r\n  children: [],\r\n};\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func\r\n    }\r\n    \r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    handleChange = e => {\r\n        const value = e.currentTarget.name\r\n        \r\n        this.setState({\r\n            [value]: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const idContact=uuidv4()\r\n\r\n        this.props.onSubmit(this.state, idContact)\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n        name: '',\r\n        number: ''\r\n    })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={styles.form}>\r\n                <label htmlFor={this.nameInputId}>Name\r\n                    <input\r\n                        type='text'\r\n                        name='name'\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        id={this.nameInputId}\r\n                    />\r\n                </label>\r\n\r\n                <label htmlFor={this.numberInputId}>Number\r\n                    <input\r\n                        type='text'\r\n                        name='number'\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}\r\n                    />\r\n                </label>\r\n\r\n                <button type='submit'>Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n \r\nexport default ContactForm;","import React from 'react';\r\nimport styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <label className={styles.filter}>\r\n            Filter\r\n            <input type='text' value={value}  onChange={onChange}></input>\r\n        </label>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Filter;\r\n","import React from 'react';\r\nimport styles from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => {\r\n    return (\r\n        <ul className={styles.contactList}>\r\n            {contactList.map(({ id, name, number }) => {\r\n                return (\r\n                    <li key={id} className={styles.contact}>\r\n                        <span>{name}: </span>\r\n                        <span>{number}</span>\r\n                        <button onClick={() => onDeleteContact(id)}>Delete</button>\r\n                    </li>\r\n                )\r\n            })}\r\n       </ul>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contactList: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n}\r\n \r\nexport default ContactList;","import React, { Component } from 'react';\nimport Container from './сomponents/Container/Container'\nimport ContactForm from './сomponents/ContactForm/ContactForm'\nimport Filter from './сomponents/Filter/Filter'\nimport ContactList from './сomponents/ContactList/ContactList'\n\nimport './index.css'\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contacts)\n\n    if (parsedContacts) {\n      this.setState({contacts: parsedContacts})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value\n    })\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }))\n  }\n\n  addContact = ({name, number}, idContact) => {\n    const contact = { id: idContact, name, number }\n\n    const arrName = this.state.contacts.map( contact => contact.name)\n      \n    if (arrName.includes(name)) {\n      alert (name + ' is already in contacts')\n      return\n    }\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact]\n    }))\n  }\n\n  render() {\n    const { contacts, filter } = this.state\n\n    const normalizedContacts = filter.toLowerCase()\n\n    const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedContacts))\n\n    return (\n      <Container>\n        \n        <h1>Phonebook</h1>\n\n        <ContactForm onSubmit={this.addContact}/>\n\n        <h2>Contacts</h2>\n\n        <Filter value={filter} onChange={this.changeFilter}/>\n\n        <ContactList contactList={visibleContacts} onDeleteContact={this.deleteContact}/>\n        \n      </Container>\n    );\n  }\n}\n \nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__kj6Vc\",\"contact\":\"ContactList_contact__1BJZd\"};"],"sourceRoot":""}